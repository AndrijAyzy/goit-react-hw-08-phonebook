{"version":3,"file":"static/js/275.2feeb3a0.chunk.js","mappings":"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","sources":["components/Phonebook/ContactForm.styled.js","components/Phonebook/ContactForm.jsx","components/NotificationMessage/NotificationMessage.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  margin-left: 20px;\n  margin-bottom: 1px;\n  label {\n    display: block;\n    margin-bottom: 2px;\n    font-size: 24px;\n    margin-left: 4px;\n  }\n  input {\n    display: block;\n    font-size: 20px;\n    width: 300px;\n    height: 40px;\n    margin-bottom: 8px;\n    border: 1px solid black;\n    border-radius: 4px;\n  }\n\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"redux/selectors\";\nimport { addContactThunk } from \"redux/thunks\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Formik, Field, Form } from 'formik';\nimport { Button, FormLabel } from '@chakra-ui/react';\nimport { StyledForm } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n   const notify = () =>\n    toast.success('Contact was successfully added to your phonebook list.');\n   const dispatch = useDispatch();\n   const { items } = useSelector(getContacts);\n   \n    const submitForm = ({ name, number }, { resetForm }) => {\n    const contactExists = items.some(contact => contact.name === name);\n\n    if (contactExists) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else {\n      dispatch(addContactThunk({ name, number }))\n        .unwrap()\n        .then(() => {\n          notify();\n          resetForm();\n        });\n    }\n  };\n \n   return (\n     <>\n       <Toaster />\n       <Formik\n          initialValues={{\n            name: '',\n            number: '',\n          }}\n          onSubmit={submitForm}\n        >\n           {props => (\n            <StyledForm as={Form}>\n              <FormLabel htmlFor=\"name\">Name</FormLabel>\n             <Field \n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              />\n              <FormLabel htmlFor=\"number\">Number</FormLabel>\n              <Field\n                id=\"number\"\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n              <Button colorScheme=\"green\" size=\"sm\" type=\"submit\" ml={5} width={400} mt={10} mb={10}>\n                Add contact\n              </Button>\n            </StyledForm>\n          )}\n        </Formik>\n      </>\n    );\n  \n  }","export const NotificationMessage = () => {\n    return (\n        <div style={{ marginLeft: '30px' }}>\n            You don't have any contact\n        </div>\n    )\n}","import styled from 'styled-components';\n\nexport const FilterSection = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 250px;\n  label {\n    font-size: 20px;\n    display: block;\n    margin-bottom: 12px;\n    margin-left: 20px;\n  }\n  input {\n    width: 350px;\n    height: 25px;\n    margin-bottom: 12px;\n    font-size: 16px;\n    border: 1px solid black;\n    border-radius: 4px;\n  }\n`;","import { NotificationMessage } from '../NotificationMessage/NotificationMessage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { filterContacts } from 'redux/filtersSlice';\nimport { FilterSection } from './Filter.styled';\n\nexport const Filter = () => {\n  const { items: contacts} = useSelector(getContacts)\n  const dispatch = useDispatch()\n\n  const handleFilterChange = e => {\n    dispatch(filterContacts(e.target.value.toLowerCase().trim()));\n  }\n\n  return contacts.length !== 0 ? (\n    <FilterSection>\n      <label>Filter\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterChange}\n              />\n        </label>\n    </FilterSection>\n  ) : (\n    <NotificationMessage />\n  );\n};","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-bottom: 10px;  \n\n  li {\n    max-width: 465px;\n    height: auto;\n    display: flex;\n    justify-content: space-between;\n\n  }\n\n\n`;  \n\nexport const Button = styled.ul`\nbackground: #000000;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport {  getFilteredContacts } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { delContactThunk, getAllContactsThunk } from 'redux/thunks';\nimport { toast } from 'react-hot-toast';\nimport { Button, Text } from '@chakra-ui/react';\nimport { ContactsList } from './ContactList.styled';\n\n\nexport const ContactList = () => {\n  const notify = () =>\n    toast.error('Contact was successfully deleted from your contacts list.');\n  const dispatch = useDispatch()\n  const filteredContacts = useSelector(getFilteredContacts)\n\n  useEffect(() => {\n    dispatch(getAllContactsThunk())\n  }, [dispatch])\n\n  const handleDeleteContact = id => {\n    dispatch(delContactThunk(id))\n      .unwrap()\n      .then(() => {\n        notify();\n      });\n  };\n\n  return (\n    <ContactsList>\n      {filteredContacts?.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <Text as='samp' fontSize='xl' ml={5} fontWeight='500' textTransform='capitalize'>\n              {name}: {number}\n            </Text>\n            <Button size='sm' colorScheme='red' type=\"button\" onClick={() => handleDeleteContact(id)}>\n              Delete\n            </Button>\n          </li>\n        );\n      })}\n    </ContactsList>\n  );\n};\n\n","import { ContactForm } from '../../Phonebook/ContactForm';\nimport { Filter } from '../../Filter/Filter';\nimport { ContactList } from '../../ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { Box, Container, Text } from '@chakra-ui/react';\n\nconst PhonebookPage = () => {\n  const { isLoading, error } = useSelector(getContacts);\n  return (\n    <Container>\n      <Box bgColor='#0fd3ff' borderRadius={4}>\n      <Text as='n' fontSize='4xl' ml={150} fontWeight='700'>Phonebook</Text>\n      <ContactForm />\n      </Box>\n      <Box bgColor='#ffffff' borderRadius={4}>\n      <Text as='n' fontSize='4xl' ml={170} fontWeight='600'>Contacts</Text>\n      {isLoading && <div style={{marginLeft: '30px'}}>Loading...</div>}\n      {error && <div>{error.message}</div>}\n      <Filter />\n      <ContactList />\n      </Box>\n    </Container>\n  );\n};\n\nexport default PhonebookPage"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","ContactForm","dispatch","useDispatch","items","useSelector","getContacts","_jsxs","_Fragment","children","_jsx","Toaster","Formik","initialValues","name","number","onSubmit","_ref","_ref2","resetForm","some","contact","alert","concat","addContactThunk","unwrap","then","toast","props","as","FormLabel","htmlFor","Field","id","type","pattern","title","required","Button","colorScheme","size","ml","width","mt","mb","NotificationMessage","style","marginLeft","FilterSection","Filter","contacts","length","onChange","e","filterContacts","target","value","toLowerCase","trim","ContactsList","ContactList","_templateObject2","filteredContacts","getFilteredContacts","useEffect","getAllContactsThunk","handleDeleteContact","delContactThunk","map","Text","fontSize","fontWeight","textTransform","onClick","_useSelector","isLoading","error","Container","Box","bgColor","borderRadius","message"],"sourceRoot":""}