{"version":3,"file":"static/js/985.92a5a61f.chunk.js","mappings":"mOAEaA,EAAaC,EAAAA,GAAAA,GAAH,0HAOVC,EAASD,EAAAA,GAAAA,IAAH,0EAMNE,EAAcF,EAAAA,GAAAA,EAAH,iJ,uCCbXG,EAAOH,EAAAA,GAAAA,KAAH,qKAUJI,EAASJ,EAAAA,GAAAA,OAAH,0iBAoBNK,EAAYL,EAAAA,GAAAA,MAAH,qHAOTM,EAAYN,EAAAA,GAAAA,MAAH,wN,mBCrCTO,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAV,EACtBC,EAAmB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,KAAnB,EAExBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMG,SAASG,SAAnB,EACvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMG,SAASK,KAAnB,EAEnBC,GAAiBC,EAAAA,EAAAA,IAAe,CAACR,EAAkBH,IAAiB,SAACI,EAAUF,GACxF,OAAOE,EAASF,QAAO,SAAAU,GAAO,OAC1BA,EAAQC,KAAKC,cAAcC,SAASb,EAAOY,cADjB,GAGjC,I,oBCLYE,EAAc,WACvB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMhB,GAAWiB,EAAAA,EAAAA,IAAYlB,GAEvBmB,GAAWC,EAAAA,EAAAA,MACXC,EAAKC,IAAAA,WAULC,EAAoB,SAAAC,GACtB,MAAwBA,EAAEC,cAAlBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MAEd,OAAQhB,GACJ,IAAK,OACDK,EAAQW,GACR,MAEJ,IAAK,SACDT,EAAUS,GACV,MAEJ,QACI,OAEX,EAaKC,EAAQ,WACVZ,EAAQ,IACRE,EAAU,GACb,EAEG,OACI,UAACxB,EAAD,CAAMmC,SAjBO,SAAAJ,GAEjB,IArBsBf,EAoBtBe,EAAEK,iBACe5B,EAAS6B,MAAK,SAAAC,GAAI,OAAIA,EAAKrB,KAAKsB,sBAAwBtB,EAAKC,aAA3C,IAErCsB,MAAM,GAAD,OAAIvB,EAAJ,4BAvBmBD,EANJ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMM,EAAT,EAASA,OAAT,MAAuB,CACzCK,GAAIA,EACJX,KAAAA,EACAM,OAAAA,EAHkB,CA+BFkB,CAAc,CAAExB,KAAAA,EAAMM,OAAAA,IAzBLG,GAASgB,EAAAA,EAAAA,IAAW1B,IA0BvDkB,IAEH,EAQS,WACI,SAAChC,EAAD,sBACA,SAACC,EAAD,CACIwC,KAAK,OACL1B,KAAK,OACLgB,MAAOhB,EACP2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUjB,KAGd,SAAC5B,EAAD,wBAEA,SAACC,EAAD,CACIwC,KAAK,MACL1B,KAAK,SACLgB,MAAOV,EACPqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUjB,KAEd,SAAC7B,EAAD,CAAQ0C,KAAK,SAAb,6BAGf,ECjFYK,EAAcnD,EAAAA,GAAAA,MAAH,2HAQXoD,EAAcpD,EAAAA,GAAAA,MAAH,yN,UCLXqD,EAAS,WAClB,IAAMC,GAAc1B,EAAAA,EAAAA,IAAYrB,GAC1BsB,GAAWC,EAAAA,EAAAA,MAEnB,OACE,4BACI,SAACqB,EAAD,qCAEA,SAACC,EAAD,CACMN,KAAK,OACLV,MAAOkB,EACPlC,KAAK,SACL8B,SAAU,SAAChB,GAAD,OAAOL,GAAS0B,EAAAA,EAAAA,GAAUrB,EAAEsB,OAAOpB,OAAnC,MAIvB,ECnBYqB,EAAOzD,EAAAA,GAAAA,GAAH,yFAMJ0D,EAAO1D,EAAAA,GAAAA,GAAH,0JASJI,EAASJ,EAAAA,GAAAA,OAAH,oWCZN2D,EAAc,WACvB,IAAMhD,GAAWiB,EAAAA,EAAAA,IAAYX,GACvBY,GAAWC,EAAAA,EAAAA,MAEjB,OACI,+BACI,SAAC2B,EAAD,UACK9C,EAASiD,KAAI,YAA2B,IAAxBxC,EAAuB,EAAvBA,KAAMW,EAAiB,EAAjBA,GAAIL,EAAa,EAAbA,OACvB,OACI,UAACgC,EAAD,WAEKtC,EAFL,MAEcM,GACV,SAAC,EAAD,CACIoB,KAAK,SACLe,QAAS,kBAAMhC,GAASiC,EAAAA,EAAAA,IAAc/B,GAA7B,EAFb,sBAFKA,EAUhB,OAIhB,E,UClBc,SAASgC,IACtB,IAAMpD,GAAWiB,EAAAA,EAAAA,IAAYX,GACvBD,GAAQY,EAAAA,EAAAA,IAAYb,GACpBD,GAAYc,EAAAA,EAAAA,IAAYf,GACxBgB,GAAWC,EAAAA,EAAAA,MAOjB,OALAkC,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,MACV,GAAE,CAACpC,KAIF,gBACEqC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,WANX,UASE,4BACE,SAACxE,EAAD,yBACA,SAACwB,EAAD,KACA,SAACxB,EAAD,wBACA,SAACsD,EAAD,IACCvC,IAAYE,GAAM,SAACf,EAAD,WAAQ,SAAC,KAAD,OAAuB,SAAC0D,EAAD,KAChDhD,EAAS6D,SAAU,SAACtE,EAAD,yDAI5B,C","sources":["pages/Contacts/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","redux/Contact/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const PhoneTitle = styled.h1`\r\n    text-align: center;\r\n    font-family: Segoe UI;\r\n    font-weight: 700;\r\n    font-size: 48px;\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport const MessageUser = styled.p`\r\n    text-align: center;\r\n    font-family: Segoe UI;\r\n    font-weight: 500;\r\n    font-size: 36px;\r\n    color: orangered;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n\r\n    border: 2px solid gray;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n`; \r\n\r\nexport const Button = styled.button`\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    font-family: Cambria;\r\n    padding: 16px;\r\n    margin-bottom: 16px;\r\n    color: orangered;\r\n    background-color: white; \r\n    border: 1px solid;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1), background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    &:hover,\r\n    &:focus {\r\n        color: white;\r\n        background-color: orangered;\r\n        border-color: none;\r\n    }\r\n`;\r\n\r\nexport const LabelForm = styled.label`\r\n    font-family: Cambria;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    color: #5e5e5e;\r\n`; \r\n\r\nexport const InputForm = styled.input`\r\n    font-family: Cambria;\r\n    font-weight: 400;\r\n    font-size: 24px;\r\n    outline: none;\r\n    border: 2px solid gray;\r\n    border-radius: 5px;\r\n    &:focus{\r\n    border: 3px solid gray;\r\n}\r\n`; \r\n\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilterValue = state => state.filter;\r\nexport const getContactsValue = state => state.contacts.items;\r\n\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectError = state => state.contacts.error;\r\n\r\nexport const getAllContacts = createSelector([getContactsValue, getFilterValue], (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n});\r\n","import { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { Form, Button, InputForm, LabelForm } from './ContactForm.styled';\r\nimport { addContact } from '../../redux/Contact/operations';\r\nimport { getContactsValue } from 'redux/Contact/selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport const ContactForm = () => {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const contacts = useSelector(getContactsValue);\r\n\r\n    const dispatch = useDispatch();\r\n    const id = shortid.generate();\r\n\r\n    const createContact = ({ name, number }) => ({\r\n        id: id,\r\n        name,\r\n        number,\r\n    });\r\n\r\n    const addContactToState = contact => dispatch(addContact(contact)); \r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        switch (name) { \r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const userName = contacts.find(user => user.name.toLocaleLowerCase() === name.toLowerCase());\r\n    if (userName) {\r\n      alert(`${name} is already in contacs`);\r\n    } else {\r\n      addContactToState(createContact({ name, number }));\r\n      reset();\r\n    }\r\n  };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('')\r\n    };\r\n\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <LabelForm> Name </LabelForm>\r\n                <InputForm\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    required\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <LabelForm> Number </LabelForm>\r\n                \r\n                <InputForm\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    required\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Button type=\"submit\"> Add contact </Button>\r\n            </Form>\r\n        );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const LabelFilter = styled.label`\r\n    font-family: Cambria;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n\r\n    margin-right: 10px;\r\n`; \r\n\r\nexport const InputFilter = styled.input`\r\n    font-family: Cambria;\r\n    font-weight: 400;\r\n    font-size: 24px;\r\n    outline: none;\r\n    border: 2px solid gray;\r\n    border-radius: 5px;\r\n    &:focus {\r\n    border: 3px solid gray;\r\n}\r\n`; \r\n","import { LabelFilter, InputFilter } from './Filter.styled';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilterValue } from 'redux/Contact/selectors';\r\nimport { setFilter } from 'redux/Contact/filterSlice';\r\n\r\nexport const Filter = () => {\r\n    const filterValue = useSelector(getFilterValue)\r\n    const dispatch = useDispatch();\r\n    \r\n  return (\r\n    <div>\r\n        <LabelFilter >Find contacts by name</LabelFilter>\r\n\r\n        <InputFilter\r\n              type=\"text\"\r\n              value={filterValue}\r\n              name=\"filter\"\r\n              onChange={(e) => dispatch(setFilter(e.target.value))}\r\n        />\r\n    </div>\r\n        );\r\n};\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n`; \r\n\r\nexport const Item = styled.li`\r\n    font-family: Cambria;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n\r\n    display: flex;\r\n    justify-content:space-between;\r\n`; \r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n    border: 2px solid gray;\r\n\r\n    padding: 5px;\r\n\r\n    text-align: center;\r\n    font-family: Cambria;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    &:active, \r\n    &:hover,\r\n    &:focus {\r\n        background-color: orangered;\r\n        color: white;\r\n        border-color: none;\r\n}`; \r\n\r\n","import { List, Item, Button } from './ContactList.styled';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/Contact/operations';\r\nimport { getAllContacts } from 'redux/Contact/selectors';\r\n\r\nexport const ContactList = () => {\r\n    const contacts = useSelector(getAllContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            <List >\r\n                {contacts.map(({ name, id, number }) => {\r\n                    return (\r\n                        <Item\r\n                            key={id}>\r\n                            {name} : {number}\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={() => dispatch(deleteContact(id))}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Item>\r\n                    );\r\n                })}\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n","import { PhoneTitle, Loader, MessageUser } from './Contacts.styled';\r\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\r\nimport { Filter } from '../../components/Filter/Filter';\r\nimport { ContactList } from '../../components/ContactList/ContactList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { ThreeDots } from 'react-loader-spinner';\r\nimport { fetchContacts } from \"../../redux/Contact/operations\";\r\nimport { getAllContacts, selectError, selectIsLoading } from '../../redux/Contact/selectors';\r\n\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector(getAllContacts);\r\n  const error = useSelector(selectError);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 40,\r\n        color: '#010101'\r\n      }}\r\n    >\r\n      <div>\r\n        <PhoneTitle>Phonebook</PhoneTitle>\r\n        <ContactForm />\r\n        <PhoneTitle>Contacts</PhoneTitle>\r\n        <Filter />\r\n        {isLoading&&!error?<Loader><ThreeDots /></Loader>:<ContactList />}\r\n        {!contacts.length && <MessageUser>There are no contacts in the Phonebook</MessageUser>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["PhoneTitle","styled","Loader","MessageUser","Form","Button","LabelForm","InputForm","getFilterValue","state","filter","getContactsValue","contacts","items","selectIsLoading","isLoading","selectError","error","getAllContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","id","shortid","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","user","toLocaleLowerCase","alert","createContact","addContact","type","pattern","title","required","onChange","LabelFilter","InputFilter","Filter","filterValue","setFilter","target","List","Item","ContactList","map","onClick","deleteContact","Contacts","useEffect","fetchContacts","style","display","justifyContent","alignItems","fontSize","color","length"],"sourceRoot":""}