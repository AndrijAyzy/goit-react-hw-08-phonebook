{"version":3,"file":"static/js/241.7b5abd82.chunk.js","mappings":"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","sources":["components/pages/SignUp/SignUp.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { signUpThunk } from \"redux/thunks\";\r\nimport { Button, Container, FormControl, FormErrorMessage, FormHelperText, FormLabel, Input } from \"@chakra-ui/react\";\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n\r\nconst SignUpPattern = yup.object({\r\n  name: yup.string().required('Required'),\r\n  email: yup.string().required('Required'),\r\n  password: yup.string().required('Required').min(7),\r\n});\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch()\r\n   \r\n    const submitForm = ({ name, email, password }, { resetForm }) => {\r\n    dispatch(\r\n      signUpThunk({\r\n        name,\r\n        email,\r\n        password,\r\n      })\r\n    );\r\n  };\r\n\r\n    return (\r\n      <Container m='auto'>\r\n      <Formik\r\n        initialValues={{ name: '', email: '', password: '' }}\r\n        onSubmit={submitForm}\r\n        validationSchema={SignUpPattern}\r\n      >\r\n        <Form>\r\n          <Field name=\"name\">\r\n            {({ field, form }) => (\r\n              <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                <FormLabel htmlFor=\"nameSignUp\" ml=\"3\">Username* </FormLabel>\r\n                <Input\r\n                  {...field}\r\n                  id=\"nameSignUp\"\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  required\r\n                />\r\n                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n              </FormControl>\r\n            )}\r\n          </Field>\r\n          <Field name=\"email\">\r\n            {({ field, form }) => (\r\n              <FormControl isInvalid={form.errors.email && form.touched.email}>\r\n                <FormLabel htmlFor=\"emailSignUp\" ml={3} mt={4}>Email* </FormLabel>\r\n                <Input\r\n                  {...field}\r\n                  id=\"emailSignUp\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                />\r\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                  <FormHelperText fontSize='xs' ml={4}>We'll never share your email.</FormHelperText>\r\n              </FormControl>\r\n            )}\r\n          </Field>\r\n          <Field name=\"password\">\r\n            {({ field, form }) => (\r\n              <FormControl\r\n                isInvalid={form.errors.password && form.touched.password}\r\n              >\r\n                <FormLabel htmlFor=\"passwordSignUp\" ml={3} mt={4}>Password* </FormLabel>\r\n                <Input\r\n                  {...field}\r\n                  id=\"passwordSignUp\"\r\n                  type=\"password\"\r\n                  pattern=\".{7,}\"\r\n                  title=\"Password must be at least 7 characters long\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                />\r\n                  <FormErrorMessage>{form.errors.password}</FormErrorMessage>\r\n                  <FormHelperText fontSize='xs' ml={4}>We'll never share your password.</FormHelperText>\r\n              </FormControl>\r\n            )}\r\n          </Field>\r\n\r\n          <Button type=\"submit\" size=\"md\" mt={5} colorScheme=\"#0fd3ff\">\r\n            Sign up\r\n          </Button>\r\n        </Form>\r\n      </Formik>\r\n    </Container>\r\n    )\r\n    \r\n}\r\n\r\nexport default SignUp\r\n\r\n\r\n\r\n\r\n"],"names":["SignUpPattern","yup","name","required","email","password","min","dispatch","useDispatch","_jsx","Container","m","children","Formik","initialValues","onSubmit","_ref","_ref2","resetForm","signUpThunk","validationSchema","_jsxs","Form","Field","_ref3","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","ml","Input","_objectSpread","id","type","placeholder","FormErrorMessage","_ref4","mt","FormHelperText","fontSize","_ref5","pattern","title","Button","size","colorScheme"],"sourceRoot":""}